import Head from "next/head";
import styles from "../styles/Home.module.css";
import styled, { keyframes, css } from "styled-components";
interface ISnowFlake {
  left: number;
  top: number;
  distance: number;
  duration: number;
}
export default function Home() {
  const boxFade = (props: ISnowFlake) => {
    return keyframes`
  0%{
    opacity:1;
    transform: rotate(0deg);
    top:${props.top}px;
  }
  100% {
    opacity:0;
    top:${props.top + props.distance}px;
    transform: rotate(360deg);

  }
`;
  };
  const SnowFlake = styled.div`
    color: white;
    position: fixed;
    font-size: 36px;
    animation: ${(props: ISnowFlake) =>
      css`
        ${boxFade(props)} ${props.duration}s linear infinite
      `};
    left: ${(props) => `${props.left}px`};
  `;
  const start = 1;
  const end = 30;
  let treeMap: number[][] = [];
  for (let i = 0; i <= end / 2; i++) {
    treeMap.push([]);
  }
  for (let i = start; i < end; i += 2) {
    let temp = "";
    let mok = Math.floor(i / 2) + 1;
    for (let j = 0; j < (end - i) / 2; j++) {
      temp += " ";
      treeMap[mok].push(0);
    }

    for (let j = 0; j < i; j++) {
      if (i === 1) {
        temp += "*";
        treeMap[mok].push(1);
      } else {
        temp += "^";
        treeMap[mok].push(2);
      }
    }
  }
  const mapRender = (val: number) => {
    switch (val) {
      case 0:
        return " ";
      case 1:
        return "*";
      case 2:
        return "^";
    }
  };
  const mapColorRender = (val: number) => {
    switch (val) {
      case 0:
        return;
      case 1:
        return "gold";
      case 2:
        return "rgb(0,179,61)";
    }
  };
  const snowArr = [];
  for (let i = 0; i < 50; i++) {
    const left = Math.random() * 1920;
    const top = Math.random() * 200 - 100;
    const duration = Math.random() * 10 + 15;
    const distance = Math.random() * 1000;
    snowArr.push({
      left,
      top,
      duration,
      distance,
    });
  }
  return (
    <>
      <Head>
        <title>CHRISTMAS</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {snowArr.map((item, idx) => {
        return (
          <SnowFlake
            key={`snow_${idx}`}
            left={item.left}
            top={item.top}
            duration={item.duration}
            distance={item.distance}
          >
            *
          </SnowFlake>
        );
      })}
      <div className={styles.main}>
        <div
          style={{
            width: "500px",
            height: "500px",
            borderRadius: "20px",
            padding: "20px",
            color: "white",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
          }}
        >
          <div
            className="message"
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              marginBottom: "40px",
              fontSize: "14px",
            }}
          >
            <div>ðŸŽ„ MERRY CRHISTMAS ðŸŽ„</div>
            <div>AND</div>
            <div>HAPPY NEW YEAR</div>
          </div>
          <div
            className="tree"
            style={{
              display: "flex",
              flexDirection: "column",
              // alignItems: "center",
              justifyContent: "center",
            }}
          >
            {treeMap.map((row, idx) => {
              const rowKey = `row_${idx}`;
              return (
                <div
                  key={rowKey}
                  style={{
                    display: "flex",
                    // background: "blue",
                  }}
                >
                  {row.map((col, idx) => {
                    const colKey = `col_${idx}`;
                    return (
                      <div
                        className={styles.treeCol}
                        key={colKey}
                        style={{
                          width: "10px",
                          height: "20px",
                          padding: "4px",
                          display: "flex",
                          // color: "rgb(0,179,61)",
                          color: mapColorRender(col),
                          // background: col !== 0 ? "white" : undefined,
                          // alignItems: "start",
                          justifyContent: "center",
                          alignItems: "center",
                        }}
                      >
                        {mapRender(col)}
                      </div>
                    );
                  })}
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </>
  );
}
